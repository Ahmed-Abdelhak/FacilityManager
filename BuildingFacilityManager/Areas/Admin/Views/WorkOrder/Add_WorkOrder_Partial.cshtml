@using BuildingFacilityManager.Models.Assets.Enums
@using BuildingFacilityManager.Models.Building_Models
@using BuildingFacilityManager.Models.Work_Order.Enums
@model BuildingFacilityManager.ViewModels.WorkOrderViewModel


@{

    using (Ajax.BeginForm("AddWork", "WorkOrder", new AjaxOptions()
    {
        Confirm = "Are you Sure ?",
        HttpMethod = "Post",
        UpdateTargetId = "Work-table",
        InsertionMode = InsertionMode.InsertAfter,
        OnSuccess = "$('.close').click();"

    }))
    {


        <div class="modal fade" id="myModal-AddWork" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel">Add a new Work Order</h4>
                    </div>
                    <div class="modal-body">
                        <div>
                            @Html.HiddenFor(s => s.WorkOrder.Id)
                            @Html.HiddenFor(e => e.WorkOrder.Date, new { Value = @DateTime.Now })


                        </div>

                        <div>
                            @Html.LabelFor(e => e.WorkOrder.Description)
                            @Html.TextBoxFor(e => e.WorkOrder.Description, new { @class = "form-control", style = "width: 100%; max-width: 100%;" })
                            @Html.ValidationMessageFor(e => e.WorkOrder.Description)

                        </div>

                        <div>
                            @Html.LabelFor(e => e.WorkOrder.WorkOrderStatus)
                            @Html.DropDownListFor(e => e.WorkOrder.WorkOrderStatus, EnumHelper.GetSelectList(typeof(WorkOrderStatus)) ,
                                "Select Type", new { @class = "form-control" })
                            @Html.ValidationMessageFor(e => e.WorkOrder.WorkOrderStatus)

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(e => e.WorkOrder.WorkOrderType)
                            @Html.DropDownListFor(e => e.WorkOrder.WorkOrderType, EnumHelper.GetSelectList(typeof(WorkOrderType)) ,
                                "Select Type", new { @class = "form-control" })
                            @Html.ValidationMessageFor(e => e.WorkOrder.WorkOrderType)

                        </div>

                        <div>
                            <label for="">Storey</label>
                            <select class="form-control" id="WorkOrder_Asset_Space_Storey_Id">
                                <option value="">Select Storey</option>
                                @foreach (var storey in @Model.Stories)
                                {
                                    <option value="@storey.Id">@storey.Label</option>

                                }
                            </select>

                        </div>
                        @*<div>
                                @Html.LabelFor(e => e.WorkOrder.Asset.Space.Storey.Id, "Storey")
                                @Html.DropDownListFor(e => e.WorkOrder.Asset.Space.Storey.Id,  new SelectList(Model.Stories, "Id","Label"),
                                    "Select Storey", new { @class = "form-control"})
                                @Html.ValidationMessageFor(e => e.WorkOrder.Asset.Space.Storey.Id)

                            </div>*@
                        <div>
                            <label for="WorkOrder_Asset_SpaceId">Space</label>
                            <select class="form-control" data-val="true" data-val-number="The field SpaceId must be a number." data-val-required="The SpaceId field is required." id="WorkOrder_Asset_SpaceId">
                                <option value="">Select Space</option>
                            </select>
                            @Html.ValidationMessageFor(e => e.WorkOrder.Asset.SpaceId)
                        </div>

                        <div>
                            <label for="WorkOrder_AssetId">Asset</label>
                            <select class="form-control" data-val="true" data-val-number="The field AssetId must be a number." data-val-required="The AssetId field is required." id="WorkOrder_AssetId" name="WorkOrder.AssetId">
                                <option value="">Select Type</option>

                            </select>
                            @Html.ValidationMessageFor(e => e.WorkOrder.AssetId)

                        </div>

                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    @Html.AntiForgeryToken()
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>

        </div>

    }
}


<div class="loading-indicator">
    <div class="sk-circle">
        <div class="sk-circle1 sk-child"></div>
        <div class="sk-circle2 sk-child"></div>
        <div class="sk-circle3 sk-child"></div>
        <div class="sk-circle4 sk-child"></div>
        <div class="sk-circle5 sk-child"></div>
        <div class="sk-circle6 sk-child"></div>
        <div class="sk-circle7 sk-child"></div>
        <div class="sk-circle8 sk-child"></div>
        <div class="sk-circle9 sk-child"></div>
        <div class="sk-circle10 sk-child"></div>
        <div class="sk-circle11 sk-child"></div>
        <div class="sk-circle12 sk-child"></div>
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}


